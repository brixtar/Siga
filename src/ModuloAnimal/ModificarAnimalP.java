/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ModuloAnimal;
import Clases.MySQL;
import Clases.PantallaPrincipal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author BayBay
 */
public class ModificarAnimalP extends javax.swing.JInternalFrame {

    /**
     * Creates new form ModificarAnimalP
     */
    public ModificarAnimalP() {
        initComponents();
        ImgAnimalp img = new ImgAnimalp();
        jpImagen.add(img);
        jpImagen.repaint();        
        cargarTabla();
        cargarEspecies();
        cargarRazas();
    }
    private void cargarTabla(){
        String[] columNames = {"Apellido","Nombre","DNI","Nombre","Especie","Raza","Peso","Fecha","Sexo","Color","Vivo","Codigo Animal"};          
        String colName[] = {"apellido","nombre","dni_duenio","animal_pequenios.nombre","especie","raza","peso","nacimiento","sexo","color","vivo","cod_animal"};        
//nombre de columnas, tabla, instruccion sql
        dtAnimal = animal.GetTabla(colName, "animal_pequenios, duenio,lista_especie,lista_raza", "SELECT  `duenio`.`nombre`, `duenio`.`apellido`,`lista_especie`.`especie`, `lista_raza`.`raza`,`animal_pequenios`.*FROM animal_pequenios, duenio,lista_especie,lista_raza WHERE (`duenio`.`dni_duenio` =`animal_pequenios`.`dni_duenio`) AND (`animal_pequenios`.`cod_especie` =`lista_especie`.`cod_especie`) AND (`animal_pequenios`.`cod_raza` =`lista_raza`.`cod_raza`)");
// se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtAnimal,columNames);                        
        jtDuenio.setModel(datos);
                // se colocan los datos en la tabla
        int a = jtDuenio.getRowCount();
        //depurador de jtDuenio de item null
        int i=0;
        a--;
        while(a>=i){
            if(jtDuenio.getValueAt(i,1)==null){
                ((DefaultTableModel)jtDuenio.getModel()).removeRow(i);
                a--;
                i--;
            }
            i++;
        }
        
    }
        void desbloquear(){
            jbBuscarDueño.setEnabled(true);
            jtnombre.setEnabled(true);
            jcbEspecie.setEnabled(true);
            jcbRaza.setEnabled(true);
            jbNuevaEspecie.setEnabled(true);
            jbNuevaRaza.setEnabled(true);
            jcbSexo.setEnabled(true);
            jDateChooser1.setEnabled(true);
            jtfPeso.setEnabled(true);
            jtfColor.setEnabled(true);
            jbActualizar.setEnabled(true);  
        }
        private void cargarEspecies(){
       
        //nombre de columnas, tabla, instruccion sql
        dcEspecie = animal.GetColumna("lista_especie", "especie", "SELECT * FROM `lista_especie");
        // se colocan los datos en la tabla
        DefaultComboBoxModel datos = new DefaultComboBoxModel(dcEspecie);
        jcbEspecie.setModel(datos);
    }
    private void cargarRazas(){
        
      jcbRaza.removeAllItems();
        String especie = jcbEspecie.getSelectedItem().toString();
       
        String cod_especie = animal.GetData("cod_especie", "SELECT cod_especie FROM lista_especie WHERE especie = \""+especie+"\"");
        
//nombre de columnas, tabla, instruccion sql
        dcRaza = animal.GetColumna("lista_raza", "raza", "SELECT * FROM lista_raza WHERE cod_especie =\""+cod_especie+"\"");
        
        // se colocan los datos en la tabla
        DefaultComboBoxModel datos = new DefaultComboBoxModel(dcRaza);
        jcbRaza.setModel(datos);
        int a = jcbRaza.getItemCount();
        //depurador de jcbRaza de item null
        int i=0;
        a--;
        while(a>=i){
            if(jcbRaza.getItemAt(i)==null){
                jcbRaza.removeItemAt(i);
                a--;
                i--;
            }
            i++;
        }
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jmiModificarAnimal = new javax.swing.JMenuItem();
        jp_Animal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtnombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtfColor = new javax.swing.JTextField();
        jtfPeso = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jcbSexo = new javax.swing.JComboBox();
        jcbRaza = new javax.swing.JComboBox();
        jcbEspecie = new javax.swing.JComboBox();
        jbNuevaEspecie = new javax.swing.JButton();
        jbNuevaRaza = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jlCodAnimal = new javax.swing.JLabel();
        jp_Dueño = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlNombre = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jlDni = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlApellido = new javax.swing.JLabel();
        jbBuscarDueño = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jpImagen = new javax.swing.JPanel();
        jbCancelar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jtfbuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDuenio = new javax.swing.JTable();
        jbBuscar = new javax.swing.JButton();
        jrbMascota = new javax.swing.JRadioButton();
        jrbDni = new javax.swing.JRadioButton();

        jmiModificarAnimal.setLabel("Modificar");
        jmiModificarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiModificarAnimalActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmiModificarAnimal);

        setClosable(true);
        setTitle("Modificar Animal Pequeño");

        jp_Animal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL ANIMAL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jp_Animal.setPreferredSize(new java.awt.Dimension(800, 700));

        jLabel4.setText("Nombre:");

        jtnombre.setEnabled(false);

        jLabel5.setText("Especie:");

        jLabel6.setText("Raza:");

        jLabel7.setText("Sexo:");

        jLabel8.setText("Fecha de Nacimiento:");

        jLabel9.setText("Peso:");

        jLabel10.setText("Color");

        jtfColor.setEnabled(false);

        jtfPeso.setEnabled(false);

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setEnabled(false);

        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Macho", "Hembra" }));
        jcbSexo.setEnabled(false);

        jcbRaza.setEnabled(false);

        jcbEspecie.setEnabled(false);
        jcbEspecie.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbEspecieItemStateChanged(evt);
            }
        });
        jcbEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEspecieActionPerformed(evt);
            }
        });

        jbNuevaEspecie.setText("Agregar Especie");
        jbNuevaEspecie.setEnabled(false);
        jbNuevaEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevaEspecieActionPerformed(evt);
            }
        });

        jbNuevaRaza.setText("Agregar Raza");
        jbNuevaRaza.setEnabled(false);
        jbNuevaRaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevaRazaActionPerformed(evt);
            }
        });

        jLabel11.setText("Cod Animal");

        jlCodAnimal.setText("Cod_animal");

        javax.swing.GroupLayout jp_AnimalLayout = new javax.swing.GroupLayout(jp_Animal);
        jp_Animal.setLayout(jp_AnimalLayout);
        jp_AnimalLayout.setHorizontalGroup(
            jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_AnimalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jp_AnimalLayout.createSequentialGroup()
                            .addGap(76, 76, 76)
                            .addComponent(jLabel9))
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jp_AnimalLayout.createSequentialGroup()
                            .addComponent(jcbEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbNuevaEspecie))
                        .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jp_AnimalLayout.createSequentialGroup()
                            .addComponent(jcbRaza, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbNuevaRaza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jtfPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jtfColor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addComponent(jlCodAnimal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_AnimalLayout.setVerticalGroup(
            jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_AnimalLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_AnimalLayout.createSequentialGroup()
                        .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jcbEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jcbRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbNuevaRaza))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbNuevaEspecie))
                .addGap(9, 9, 9)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jtfColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jp_AnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jlCodAnimal))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jp_Dueño.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DEL DUEÑO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jp_Dueño.setPreferredSize(new java.awt.Dimension(800, 700));

        jLabel1.setText("Nombre");

        jlNombre.setText("nombre");

        jLabel3.setText("DNI");

        jlDni.setText("dni");

        jLabel2.setText("Apellido");

        jlApellido.setText("apellido");

        jbBuscarDueño.setText("Buscar Dueño");
        jbBuscarDueño.setActionCommand("Cambiar Dueño");
        jbBuscarDueño.setEnabled(false);
        jbBuscarDueño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarDueñoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_DueñoLayout = new javax.swing.GroupLayout(jp_Dueño);
        jp_Dueño.setLayout(jp_DueñoLayout);
        jp_DueñoLayout.setHorizontalGroup(
            jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_DueñoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2))
                .addGap(42, 42, 42)
                .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_DueñoLayout.createSequentialGroup()
                        .addComponent(jlNombre)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp_DueñoLayout.createSequentialGroup()
                        .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlApellido)
                            .addComponent(jlDni))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbBuscarDueño, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
        );
        jp_DueñoLayout.setVerticalGroup(
            jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_DueñoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jlApellido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jp_DueñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jlDni)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_DueñoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBuscarDueño, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jpImagenLayout = new javax.swing.GroupLayout(jpImagen);
        jpImagen.setLayout(jpImagenLayout);
        jpImagenLayout.setHorizontalGroup(
            jpImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        jpImagenLayout.setVerticalGroup(
            jpImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbActualizar.setText("Actualizar");
        jbActualizar.setEnabled(false);
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BUSCAR ANIMAL PEQUEÑO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jtfbuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfbuscarMouseClicked(evt);
            }
        });

        jtDuenio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtDuenio.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jtDuenio.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(jtDuenio);

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jrbMascota.setText("Por Nombre de Mascota");

        jrbDni.setSelected(true);
        jrbDni.setText("Por DNI");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jtfbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jrbMascota)
                        .addGap(18, 18, 18)
                        .addComponent(jrbDni))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar)
                    .addComponent(jrbMascota)
                    .addComponent(jrbDni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jp_Animal, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jp_Dueño, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jp_Dueño, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp_Animal, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jp_Animal.getAccessibleContext().setAccessibleName("Datos del Animal");
        jPanel2.getAccessibleContext().setAccessibleName("BUSCAR ANIMAL");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbEspecieItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbEspecieItemStateChanged
        // TODO add your handling code here:
        cargarRazas();

    }//GEN-LAST:event_jcbEspecieItemStateChanged

    private void jcbEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEspecieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEspecieActionPerformed

    private void jbNuevaEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevaEspecieActionPerformed
        // TODO add your handling code here:
        String nuevaesp = JOptionPane.showInputDialog(rootPane,"Ingrese la especie que desea agregar:","Nueva Especie", WIDTH);
        boolean aux = animal.existe("lista_especie", "especie", nuevaesp);
        if (aux==true){
            JOptionPane.showMessageDialog(rootPane, "El registro ya existe");
        }else{
            String datos[] = {nuevaesp};
            //array de datos , instruccion sql
            animal.InsertarRegistro(datos, "insert into lista_especie (`especie`)values(?)");
            cargarEspecies();
            //buscamos el cod_especie correspondiente
            int ultimo= jcbEspecie.getItemCount()-1;
            String especie = jcbEspecie.getItemAt(ultimo).toString();
            String cod_especie = animal.GetData("cod_especie", "SELECT cod_especie FROM lista_especie WHERE especie = \""+especie+"\"");

            //agregamos la nueva raza
            String nuevaraza = JOptionPane.showInputDialog(rootPane,"Ingrese una raza inicial para "+nuevaesp+"","Nueva Raza",WIDTH);
            String dato[]= {cod_especie,nuevaraza};
            animal.InsertarRegistro(dato, "insert into lista_raza (`cod_especie`,`raza`)values(?,?)");
            cargarRazas();

        }

    }//GEN-LAST:event_jbNuevaEspecieActionPerformed

    private void jbNuevaRazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevaRazaActionPerformed
        // TODO add your handling code here:
        String especie= (String)jcbEspecie.getSelectedItem();
        String cod_especie = animal.GetData("cod_especie", "SELECT cod_especie FROM lista_especie WHERE especie = \""+especie+"\"");
        String nuevaraza = JOptionPane.showInputDialog(rootPane,"Ingrese una raza para "+especie+"","Nueva Raza",WIDTH);
        boolean aux = animal.existe("lista_raza", "raza", nuevaraza);
        if (aux==true){
            JOptionPane.showMessageDialog(rootPane, "El registro ya existe");
        }else{
            String dato[]= {cod_especie,nuevaraza};
            animal.InsertarRegistro(dato, "insert into lista_raza (`cod_especie`,`raza`)values(?,?)");
            cargarRazas();
        }
    }//GEN-LAST:event_jbNuevaRazaActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        // TODO add your handling code here:
        String nombre = jtnombre.getText();
        String especie= (String)jcbEspecie.getSelectedItem();
        String cod_especie =animal.GetData("cod_especie", "SELECT cod_especie FROM lista_especie WHERE especie = \""+especie+"\"");
        String raza = (String)jcbRaza.getSelectedItem();
        String cod_raza = animal.GetData("cod_raza", "SELECT cod_raza FROM lista_raza WHERE raza = \""+raza+"\"");
        String peso = jtfPeso.getText();
        DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
        Date nacio = jDateChooser1.getDate();        
        String date = fecha.format(nacio); 
        String sexo = (String)jcbSexo.getSelectedItem();
        String color= jtfColor.getText();
        String dni_duenio = jlDni.getText();
        String life ="si";
        String cod_animal =jlCodAnimal.getText();
        
        String datos[] = {nombre,cod_especie,cod_raza,peso,date,sexo,color,dni_duenio,life,cod_animal};
        //array de datos , instruccion sql
        animal.UpdateRegistro(datos, "UPDATE `animal_pequenios`SET`nombre`=?,`cod_especie`=?,`cod_raza`=?,`peso`=?,`nacimiento`=?,`sexo`=?,`color`=?,`dni_duenio`=?,`vivo`=? WHERE `cod_animal`=?");
        cargarTabla();

    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jtfbuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfbuscarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfbuscarMouseClicked

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        String texto= jtfbuscar.getText();
        String[] columNames = {"Apellido","Nombre","DNI","Nombre","Especie","Raza","Peso","Fecha","Sexo","Color","Vivo","Codigo Animal"};          
        String colName[] = {"apellido","nombre","dni_duenio","animal_pequenios.nombre","especie","raza","peso","nacimiento","sexo","color","vivo","cod_animal"};         //nombre de columnas, tabla, instruccion sql
        //nombre de columnas, tabla, instruccion sql
        if(jrbDni.isSelected()==true){
            dtAnimal = animal.GetTabla(colName, "animal_pequenios, duenio,lista_especie,lista_raza", "SELECT  `duenio`.`nombre`, `duenio`.`apellido`,`lista_especie`.`especie`, `lista_raza`.`raza`,`animal_pequenios`.*FROM animal_pequenios, duenio,lista_especie,lista_raza WHERE `duenio`.`dni_duenio` =`animal_pequenios`.`dni_duenio` AND `animal_pequenios`.`cod_especie` =`lista_especie`.`cod_especie` AND `animal_pequenios`.`cod_raza` =`lista_raza`.`cod_raza` AND `duenio`.`dni_duenio`="+texto+" ");
        }
        if(jrbMascota.isSelected()==true){

            dtAnimal = animal.GetTabla(colName, "animal_pequenios, duenio,lista_especie,lista_raza", "SELECT  `duenio`.`nombre`, `duenio`.`apellido`,`lista_especie`.`especie`, `lista_raza`.`raza`,`animal_pequenios`.*FROM animal_pequenios, duenio,lista_especie,lista_raza WHERE (`duenio`.`dni_duenio` =`animal_pequenios`.`dni_duenio`) AND (`animal_pequenios`.`cod_especie` =`lista_especie`.`cod_especie`) AND (`animal_pequenios`.`cod_raza` =`lista_raza`.`cod_raza`) AND (`animal_pequenios`.`nombre`= \"" + texto + "\") ");
        }
        // se colocan los datos en la tabla
        DefaultTableModel datos = new DefaultTableModel(dtAnimal,columNames);
        jtDuenio.setModel(datos);
        int a = jtDuenio.getRowCount();
        //depurador de jtDuenio de item null
        int i=0;
        a--;
        while(a>=i){
            if(jtDuenio.getValueAt(i,1)==null){
                ((DefaultTableModel)jtDuenio.getModel()).removeRow(i);
                a--;
                i--;
            }
            i++;
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jmiModificarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiModificarAnimalActionPerformed
        // TODO add your handling code here:
        desbloquear();

        int filamodificar = jtDuenio.getSelectedRow();
        if (filamodificar >= 0) {
            jlApellido.setText(jtDuenio.getValueAt(filamodificar, 0).toString());
            jlNombre.setText(jtDuenio.getValueAt(filamodificar, 1).toString());
            jlDni.setText(jtDuenio.getValueAt(filamodificar, 2).toString());
            jtnombre.setText(jtDuenio.getValueAt(filamodificar, 3).toString());
            jcbEspecie.setSelectedItem(jtDuenio.getValueAt(filamodificar, 4).toString());
            jcbRaza.setSelectedItem(jtDuenio.getValueAt(filamodificar, 5).toString());
            jtfPeso.setText(jtDuenio.getValueAt(filamodificar, 6).toString());
            jtfColor.setText(jtDuenio.getValueAt(filamodificar, 9).toString());
            SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");
            String fecha = jtDuenio.getValueAt(jtDuenio.getSelectedRow(),7).toString().trim() ;   
            Date dato = null;
            try {
            dato = formatoDelTexto.parse(fecha);
            } catch (ParseException ex) {
            ex.printStackTrace();
            }
            jDateChooser1.setDate(dato);
            jcbSexo.setSelectedItem(jtDuenio.getValueAt(filamodificar, 8).toString());
            jlCodAnimal.setText(jtDuenio.getValueAt(filamodificar, 11).toString());
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ");
        }
    }//GEN-LAST:event_jmiModificarAnimalActionPerformed

    private void jbBuscarDueñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarDueñoActionPerformed
        // TODO add your handling code here:
        ListaDueño lista = new ListaDueño();
        PantallaPrincipal.jdpFondo.add(lista);
        lista.toFront();
        lista.setVisible(true);
        ListaDueño.jLabel1.setText("2");

    }//GEN-LAST:event_jbBuscarDueñoActionPerformed
    Object[][] dtAnimal; 
    MySQL animal = new MySQL(); 
    Object[] dcEspecie;
    Object[] dcRaza;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBuscar;
    public static javax.swing.JButton jbBuscarDueño;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbNuevaEspecie;
    private javax.swing.JButton jbNuevaRaza;
    private javax.swing.JComboBox jcbEspecie;
    private javax.swing.JComboBox jcbRaza;
    private javax.swing.JComboBox jcbSexo;
    public static javax.swing.JLabel jlApellido;
    private javax.swing.JLabel jlCodAnimal;
    public static javax.swing.JLabel jlDni;
    public static javax.swing.JLabel jlNombre;
    private javax.swing.JMenuItem jmiModificarAnimal;
    private javax.swing.JPanel jpImagen;
    private javax.swing.JPanel jp_Animal;
    private javax.swing.JPanel jp_Dueño;
    private javax.swing.JRadioButton jrbDni;
    private javax.swing.JRadioButton jrbMascota;
    private javax.swing.JTable jtDuenio;
    private javax.swing.JTextField jtfColor;
    private javax.swing.JTextField jtfPeso;
    private javax.swing.JTextField jtfbuscar;
    private javax.swing.JTextField jtnombre;
    // End of variables declaration//GEN-END:variables
}
